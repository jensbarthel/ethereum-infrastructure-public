name: Init-EKS-Cluster

on:
  workflow_dispatch:
  push:
    paths: ['.github/workflows/init-eks.yml']

env:
  EKS_CLUSTER_NAME: elmo
  AWS_ACCOUNT_ID: 514125260731
  AWS_REGION: us-east-1
  LOAD_BALANCER_POLICY_NAME: AWSLoadBalancerControllerIAMPolicy
  LOAD_BALANCER_CONTROLLER_SERVICE_ACCOUNT: aws-load-balancer-controller

jobs:
  initialize-cluster:
    name: Initialize the EKS cluster named ${{ env.EKS_CLUSTER_NAME }}
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Download eksctl
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      - name: Add identity mapping for admin user
        run: |
          eksctl create iamidentitymapping \
            --cluster  ${EKS_CLUSTER_NAME} \
            --arn arn:aws:iam::${AWS_ACCOUNT_ID}:user/jens \
            --group system:masters \
            --username admin

      - name: Install kubectl
        uses: azure/setup-kubectl@v1

      - name: Create kubeconfig
        run: |
          aws eks update-kubeconfig --name ${EKS_CLUSTER_NAME}

      - name: Create and use prysm namespace
        run: |
          kubectl create namespace prysm --dry-run=client -o yaml | kubectl apply -f -
          kubectl config set-context --current --namespace prysm

      - name: Create IAM OIDC provider for Loadbalancer
        run: |
          eksctl utils associate-iam-oidc-provider \
              --region ${AWS_REGION} \
              --cluster ${EKS_CLUSTER_NAME} \
              --approve

      - name: Create Load Balancer controller IAM policy if missing
        run: |
          if ! $(AWS_PAGER="" aws iam get-policy --policy-arn arn:aws:iam::${AWS_ACCOUNT_ID}:policy/${LOAD_BALANCER_POLICY_NAME} &> /dev/null)
          then
            wget https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
            aws iam create-policy \
                --policy-name ${LOAD_BALANCER_POLICY_NAME} \
                --policy-document file://iam_policy.json
          else
            echo "Policy arn:aws:iam::${AWS_ACCOUNT_ID}:policy/${POLICY_NAME} already present. Skipping."
          fi

      - name: Create a IAM role and ServiceAccount for the Load Balancer controller
        run: |
          eksctl create iamserviceaccount \
            --cluster ${EKS_CLUSTER_NAME} \
            --namespace kube-system \
            --name ${LOAD_BALANCER_CONTROLLER_SERVICE_ACCOUNT} \
            --attach-policy-arn arn:aws:iam::${AWS_ACCOUNT_ID}:policy/${LOAD_BALANCER_POLICY_NAME} \
            --override-existing-serviceaccounts \
            --approve

      - name: Install helm
        uses: azure/setup-helm@v1

      - name: Install the Load Balancer controller
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"

          export VPC_ID=$(aws cloudformation describe-stacks \
                      --stack-name eksctl-${EKS_CLUSTER_NAME}-cluster \
                      --query "Stacks[0].Outputs[?OutputKey=='VPC'].OutputValue" \
                      --output text)

          helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --set clusterName=${EKS_CLUSTER_NAME} \
            --set serviceAccount.create=false \
            --set serviceAccount.name=${LOAD_BALANCER_CONTROLLER_SERVICE_ACCOUNT} \
            --set vpcId=${VPC_ID} \
            --set region=${AWS_REGION} \
