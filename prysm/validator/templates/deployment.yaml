apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}
  labels:
  {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
  {{- include "validator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
    {{- include "validator.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ .Values.validator.wallet.walletSecretVolumeName }}
          secret:
            secretName: {{ include "validator.fullname" . }}
        - name: {{ .Values.validator.wallet.walletVolumeName }}
          emptyDir: { }
      initContainers:
        - name: "aws-cli"
          image: "amazon/aws-cli"
          volumeMounts: [ { name: {{ .Values.validator.wallet.walletVolumeName }}, mountPath: {{ .Values.validator.wallet.walletDirectory }} } ]
          env:
            - { name: AWS_DEFAULT_REGION, value: "{{ .Values.validator.wallet.awsS3Init.awsRegion }}" }
            - { name: AWS_ACCESS_KEY_ID, value: "{{ .Values.validator.wallet.awsS3Init.accessKeyId }}" }
            - { name: AWS_SECRET_ACCESS_KEY, value: "{{ .Values.validator.wallet.awsS3Init.secretAccessKey }}" }
          command: [ "/bin/sh", "-c" ]
          args: ["aws s3 cp {{ .Values.validator.wallet.awsS3Init.walletPath }} {{ .Values.validator.wallet.walletDirectory }}/{{ .Values.validator.wallet.awsS3Init.walletFileName }}"]
        - name: "alpine"
          image: "alpine"
          volumeMounts: [ { name: {{ .Values.validator.wallet.walletVolumeName }}, mountPath: {{ .Values.validator.wallet.walletDirectory }} } ]
          command: [ "/bin/sh", "-c" ]
          args: ["cd {{ .Values.validator.wallet.walletDirectory }} && tar -xzpf {{ .Values.validator.wallet.awsS3Init.walletFileName }} && rm {{ .Values.validator.wallet.awsS3Init.walletFileName }}"]

      containers:
        - name: {{ .Chart.Name }}
          {{ if not .Values.deployment.image.useDebug }}
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.stableTag }}
          {{ else }}
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.debugTag }}
          {{ end }}

          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          args:
            - "--beacon-rpc-provider={{ .Values.deployment.beaconNode }}:4000"
            - "--accept-terms-of-use"
            - "--wallet-dir={{ .Values.validator.wallet.walletDirectory }}"
            - "--wallet-password-file={{ .Values.validator.wallet.walletPasswordFilePath }}"
            - "--graffiti={{ .Values.validator.graffiti }}"
            - "--monitoring-host=0.0.0.0"
            - "--monitoring-port={{ .Values.ports.metrics }}"
            {{- if .Values.validator.webUi.activateWebUi }}
            - "--web"
            - "--grpc-gateway-host=0.0.0.0"
            {{- end }}
            {{- if .Values.validator.useTestnet }}
            - "--pyrmont"
            {{- end }}

          volumeMounts:
            - name: {{ .Values.validator.wallet.walletVolumeName }}
              mountPath: {{ .Values.validator.wallet.walletDirectory }}
            - name: {{ .Values.validator.wallet.walletSecretVolumeName }}
              mountPath: {{ .Values.validator.wallet.walletPasswordFilePath }}
              subPath: {{ .Values.validator.wallet.walletSecretSubPath}}
            - name: {{ .Values.validator.wallet.walletSecretVolumeName }}
              mountPath: {{ .Values.validator.wallet.walletDirectory }}
              subPath: {{ .Values.validator.wallet.walletSecretSubPath}}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.healthEndpoint }}
              port: {{ .Values.ports.metrics }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.healthEndpoint }}
              port: {{ .Values.ports.metrics }}
