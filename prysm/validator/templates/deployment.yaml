apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "validator.fullname" . }}
  labels:
  {{- include "validator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
  {{- include "validator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
    {{- include "validator.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ .Values.validator.wallet.secretVolumeName }}
          secret:
            secretName: {{ include "validator.fullname" . }}
        - name: horst
          emptyDir: { }

      initContainers:
        - name: "download-wallet"
          image: "amazon/aws-cli"
          volumeMounts: [ { name: horst, mountPath: {{ .Values.validator.wallet.directory }} } ]
          env:
            - { name: AWS_DEFAULT_REGION, value: "{{ .Values.validator.wallet.awsS3Init.awsRegion }}" }
            - { name: AWS_ACCESS_KEY_ID, value: "{{ .Values.validator.wallet.awsS3Init.accessKeyId }}" }
            - { name: AWS_SECRET_ACCESS_KEY, value: "{{ .Values.validator.wallet.awsS3Init.secretAccessKey }}" }
          command: [ "/bin/sh", "-c" ]
          args: [ "aws s3 cp {{ .Values.validator.wallet.awsS3Init.walletPath }} {{ .Values.validator.wallet.directory }}/{{ .Values.validator.wallet.awsS3Init.walletFileName }}" ]
        - name: "untar-wallet"
          image: busybox
          volumeMounts: [ { name: horst, mountPath: {{ .Values.validator.wallet.directory }} } ]
          command: [ "/bin/sh", "-c" ]
          args: [ "cd {{ .Values.validator.wallet.directory }} && tar -xzpf {{ .Values.validator.wallet.awsS3Init.walletFileName }} && rm {{ .Values.validator.wallet.awsS3Init.walletFileName }}" ]
        {{ if .Values.validator.webUi.activateWebUi }}
        - name: "set-ui-pwhash"
          image: busybox
          volumeMounts: [ { name: horst, mountPath: {{ .Values.validator.wallet.directory }} } ]
          env:
            - name: UI_PASSWORD_HASH
              valueFrom:
                secretKeyRef:
                  name: {{ include "validator.fullname" . }}
                  key: "{{ .Values.validator.webUi.passwordHash.secretKey }}"
          command: [ "/bin/sh", "-c" ]
          args: [ "echo ${UI_PASSWORD_HASH} > {{ .Values.validator.wallet.directory }}/{{.Values.validator.webUi.passwordHash.fileName}}" ]
        {{ end }}

      containers:
        - name: {{ .Chart.Name }}
          {{ if not .Values.deployment.image.useDebug }}
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.stableTag }}
          {{ else }}
          image: {{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.debugTag }}
          {{ end }}

          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          args:
            - "--beacon-rpc-provider={{ .Values.deployment.beaconNode }}:4000"
            - "--accept-terms-of-use"
            - "--wallet-dir={{ .Values.validator.wallet.directory }}"
            - "--wallet-password-file={{ .Values.validator.wallet.passwordFilePath }}"
            - "--graffiti={{ .Values.validator.graffiti }}"
            - "--monitoring-host=0.0.0.0"
            - "--monitoring-port={{ .Values.ports.metrics }}"
            {{- if .Values.validator.webUi.activateWebUi }}
            - "--web"
            - "--grpc-gateway-host=0.0.0.0"
            {{- end }}
            {{- if .Values.validator.useTestnet }}
            - "--pyrmont"
            {{- end }}

          volumeMounts:
            - name: {{ .Values.validator.wallet.secretVolumeName }}
              mountPath: {{ .Values.validator.wallet.passwordFilePath }}
              subPath: {{ .Values.validator.wallet.secretName }}
            - name: horst
              mountPath: {{ .Values.validator.wallet.directory }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.healthEndpoint }}
              port: {{ .Values.ports.metrics }}
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.healthEndpoint }}
              port: {{ .Values.ports.metrics }}